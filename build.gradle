
/*
buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven {
            url = 'https://repo.spongepowered.org/repository/maven-public/'
            content { includeGroup "org.spongepowered" }
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

 */


plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id "org.spongepowered.mixin" version "0.7-SNAPSHOT"
}

version = '1.0'
group = 'com.prosbloom'
archivesBaseName = 'cerestech'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    //mappings channel: 'official', version: '1.19.2'
    mappings channel: "parchment", version: "2022.11.27-1.19.2"
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }




repositories {
    jcenter()
    flatDir {
        dirs "libs"
    }
    maven {
        url = "https://maven.minecraftforge.net/"
    }
    maven {
        url = "https://repo.spongepowered.org/maven"
    }
    maven {
        url = "https://maven.blamejared.com/"
        content {
            includeGroup "mezz.jei"
            includeGroup "com.blamejared.crafttweaker"
            includeGroup "vazkii.patchouli"
        }
    }
    maven {
        url = "https://maven.architectury.dev/"
        content {
            includeGroup "dev.architectury"
        }
    }
    maven {
        url = "https://maven.saps.dev/releases/"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
    maven {
        url = "https://maven.tterrag.com/"
        content {
            includeGroup "com.tterrag.registrate"
            includeGroup "com.simibubi.create"
        }
    }
    maven {
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
        content {
            includeGroup "software.bernie.geckolib"
        }
    }
    maven {
        url = "https://maven.covers1624.net/"
        content {
            includeGroup "com.teamcofh"
        }
    }
    maven {
        url = "https://maven.firstdarkdev.xyz/snapshots/"
        content {
            includeGroup "com.lowdragmc.ldlib"
            includeGroup "com.gregtechceu.gtceu"
        }
    }
    maven {
        url = "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://modmaven.dev/"
    }
}
dependencies {
    minecraft "net.minecraftforge:forge:1.19.2-43.2.21"
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

    implementation fg.deobf("mezz.jei:jei-1.19.2-forge:11.6.0.1018")
    //implementation fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-1.19.2:10.1.49")
    //implementation fg.deobf("dev.latvian.mods:kubejs-forge:1902.6.1-build.370") { transitive = false }
    implementation fg.deobf("com.lowdragmc.ldlib:ldlib-forge-1.19.2:1.0.19.d") { transitive = false }
    implementation fg.deobf("com.gregtechceu.gtceu:gtceu-forge-1.19.2:1.0.13") {
        transitive = false
    }
    implementation fg.deobf("com.simibubi.create:create-1.19.2:0.5.1.c-36:all") { transitive = false }
    implementation fg.deobf("curse.maven:configuration-444699:4519560")
    implementation fg.deobf("curse.maven:shutup-experimental-settings-407174:3759881")

    compileOnly fg.deobf("com.tterrag.registrate:Registrate:MC1.19.3-1.1.13")
}


mixin {
    add sourceSets.main, "cerestech.refmap.json"
    config "ct-common.mixins.json"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "examplemod",
                "Specification-Vendor"    : "examplemodsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "ct-common.mixins.json"
        ])
    }
}
jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
