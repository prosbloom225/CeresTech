plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id "org.parchmentmc.librarian.forgegradle" version "[1,)"
    id "org.spongepowered.mixin" version "0.7-SNAPSHOT"
    id "eclipse"
    id "idea"
    id "maven-publish"
}

repositories {
    jcenter()
    flatDir {
        dirs "libs"
    }
    maven {
        url = "https://maven.minecraftforge.net/"
    }
    maven {
        url = "https://repo.spongepowered.org/maven"
    }
    maven {
        url = "https://maven.blamejared.com/"
        content {
            includeGroup "mezz.jei"
            includeGroup "com.blamejared.crafttweaker"
            includeGroup "vazkii.patchouli"
        }
    }
    maven {
        url = "https://maven.architectury.dev/"
        content {
            includeGroup "dev.architectury"
        }
    }
    maven {
        url = "https://maven.saps.dev/releases/"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
    maven {
        url = "https://maven.tterrag.com/"
        content {
            includeGroup "com.tterrag.registrate"
            includeGroup "com.simibubi.create"
        }
    }
    maven {
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
        content {
            includeGroup "software.bernie.geckolib"
        }
    }
    maven {
        url = "https://maven.covers1624.net/"
        content {
            includeGroup "com.teamcofh"
        }
    }
    maven {
        url = "https://maven.firstdarkdev.xyz/snapshots/"
        content {
            includeGroup "com.lowdragmc.ldlib"
            includeGroup "com.gregtechceu.gtceu"
        }
    }
    maven {
        url = "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://modmaven.dev/"
    }
}

sourceSets {
    main
}

def mcVersion = "1.19.2"
def modName = "JAOPCAGTCEu"
def modId = "jaopcagtceu"
def specVersion = "2"
def vendor = "thelm"

group = "thelm.jaopca.gtceu"
version = "2.0.0.0"

archivesBaseName = "${modName}-${mcVersion}"

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

minecraft {
    //mappings channel: 'official', version: '1.19.2'
    mappings channel: "parchment", version: "2022.11.27-1.19.2"
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}


dependencies {
    minecraft "net.minecraftforge:forge:1.19.2-43.2.21"
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

    implementation fg.deobf("mezz.jei:jei-1.19.2-forge:11.6.0.1018")
    implementation fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-1.19.2:10.1.49")
    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-1.19:3.1.40")
    implementation fg.deobf("vazkii.patchouli:Patchouli:1.19.2-77")
    implementation fg.deobf("com.lowdragmc.ldlib:ldlib-forge-1.19.2:1.0.19.d") {
        transitive = false
    }
    implementation fg.deobf("com.teamcofh:cofh_core:1.19.2-10.2.1.40")
    implementation fg.deobf("com.teamcofh:thermal_core:1.19.2-10.2.0.5")
    implementation fg.deobf("dev.latvian.mods:rhino-forge:1902.2.2-build.272")
    implementation fg.deobf("dev.architectury:architectury-forge:6.5.85")
    implementation fg.deobf("dev.latvian.mods:kubejs-forge:1902.6.1-build.370") {
        transitive = false
    }
    implementation fg.deobf("com.gregtechceu.gtceu:gtceu-forge-1.19.2:1.0.12.c") {
        transitive = false
    }
    implementation fg.deobf("com.simibubi.create:create-1.19.2:0.5.1.c-36:all") {
        transitive = false
    }
    implementation fg.deobf("mekanism:Mekanism:1.19.2-10.3.9.13")
    implementation fg.deobf("mekanism:Mekanism:1.19.2-10.3.9.13:generators")
    implementation fg.deobf("com.teamcofh:thermal_foundation:1.19.2-10.2.0.47")
    implementation fg.deobf("com.teamcofh:thermal_expansion:1.19.2-10.2.0.21")
    implementation fg.deobf("com.teamcofh:thermal_integration:1.19.2-10.2.0.17")

    //CurseMaven
    implementation fg.deobf("curse.maven:jaopca-266936:4756161")
    implementation fg.deobf("curse.maven:configuration-444699:4519560")
    implementation fg.deobf("curse.maven:shutup-experimental-settings-407174:3759881")
    implementation fg.deobf("curse.maven:ato-405593:4046926")
    implementation fg.deobf("curse.maven:allthemodium-364466:4667332")
}

def manifestAttributes = [
        "Specification-Title": modName,
        "Specification-Vendor": vendor,
        "Specification-Version": specVersion,
        "Implementation-Title": archivesBaseName,
        "Implementation-Version": version,
        "Implementation-Vendor": vendor,
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        "MixinConnector": "thelm.jaopca.gtceu.mixins.JAOPCAGTCEuMixinConnector"
]

jar {
    manifest.attributes(manifestAttributes)
    finalizedBy("reobfJar")
}

sourcesJar {
    manifest.attributes(manifestAttributes)
}

mixin {
    add sourceSets.main, "jaopca.gtceu.refmap.json"
}
